---
import type { Episode } from '@lwj/types';
import { loadEpisodesByTopic, loadAllTags } from '@lwj/sanity-helpers';
import { PageHeader } from '@lwj/design-system';
import Layout from '../../layouts/Layout.astro';
import { EpisodePreview } from '../../components/episode-preview';

type TagStaticPaths = {
	params: {
		tagSlug: string;
	};
	props: {
		topic: string;
		episodes: Episode[];
	};
};

export async function getStaticPaths() {
	const topics = await loadAllTags();

	let paths: TagStaticPaths[] = [];

	const topicPromises = topics.data?.result.map(async (topic) => {
		const result = await loadEpisodesByTopic({ topic: topic.slug });
		const { details, episodes } = result.data?.result ?? {};

		return {
			params: {
				tagSlug: topic.slug,
			},
			props: {
				details,
				episodes,
			},
		} as unknown as TagStaticPaths;
	});

	paths = await Promise.all<TagStaticPaths[]>(topicPromises as any);

	return paths;
}

const { details, episodes } = Astro.props as {
	details: {
		description: string;
		label: string;
		slug: string;
		uri: string;
	};
	episodes: Episode[];
};

const title = `Learn ${details.label} from Industry Experts`;
---

<Layout title={title}>
	<PageHeader heading={details.label} lede={details.description}>
		<div class="subscribe-bar">
			<h3>Never miss an episode:</h3>
			<a href="/newsletter" title="Get the newsletter">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 70 70" fill="none"
					><path
						fill="#97959D"
						fill-rule="evenodd"
						d="M9 18.5c0-1.1.9-2 2-2h48a2 2 0 0 1 2 2v33a2 2 0 0 1-2 2H11a2 2 0 0 1-2-2v-33Zm6.8 2 18.49 18.66a1 1 0 0 0 1.42 0l18.5-18.66H15.8ZM57 23.36 45.46 35 57 46.64V23.36ZM54.2 49.5 42.65 37.84l-4.1 4.14a5 5 0 0 1-7.1 0l-4.1-4.14L15.8 49.5h38.4ZM13 46.64V23.36L24.54 35 13 46.64Z"
						clip-rule="evenodd"></path>
				</svg>
			</a>
			<a
				title="Add to Calendar"
				class="addeventstc"
				data-id="BX577118"
				href="https://www.addevent.com/calendar/BX577118"
				target="_blank"
				rel="nofollow"
				data-styling="none"
			>
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 70 70" fill="none"
					><path
						fill="#97959D"
						fill-rule="evenodd"
						d="M25 15.94a2 2 0 0 0-2 2v1.12h-9a2 2 0 0 0-2 2v31c0 1.1.9 2 2 2h42a2 2 0 0 0 2-2v-31a2 2 0 0 0-2-2h-9v-1.12a2 2 0 0 0-4 0v1.12H27v-1.12a2 2 0 0 0-2-2Zm18 7.12H27v.88a2 2 0 1 1-4 0v-.88h-7V29h38v-5.94h-7v.88a2 2 0 1 1-4 0v-.88ZM16 32h38v18.06H16V32Z"
						clip-rule="evenodd"></path>
				</svg>
			</a>
			<a
				href="https://youtube.com/@learnwithjason"
				title="subscribe on YouTube"
			>
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 70 70" fill="none"
					><path
						fill="#97959D"
						d="M30 42.5v-15L42.99 35 30 42.5Zm28.95-19.53a6.26 6.26 0 0 0-4.42-4.43C50.63 17.5 35 17.5 35 17.5s-15.64 0-19.53 1.04a6.26 6.26 0 0 0-4.43 4.43C10 26.87 10 35 10 35s0 8.14 1.04 12.03a6.26 6.26 0 0 0 4.43 4.42C19.37 52.5 35 52.5 35 52.5s15.64 0 19.53-1.05a6.26 6.26 0 0 0 4.42-4.42C60 43.13 60 35 60 35s0-8.14-1.05-12.03Z"
					></path>
				</svg>
			</a>
			<a href="https://twitch.tv/jlengstorf" title="follow on Twitch">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 70 70" fill="none"
					><path
						fill="#97959D"
						d="m22.5 14-8.92 8.93v32.14h10.7V64l8.93-8.93h7.15L56.42 39V14H22.5Zm30.35 23.21-7.14 7.15h-7.14l-6.25 6.25v-6.25H24.3V17.57h28.56v19.64Z"
					></path><path
						fill="#97959D"
						d="M37.7 23.83h-3.6v10.7h3.6v-10.7ZM47.53 23.83h-3.6v10.7h3.6v-10.7Z"
					></path>
				</svg>
			</a>
		</div>
	</PageHeader>

	<section class="episode-previews">
		{
			episodes?.map((episode) => {
				return <EpisodePreview episode={episode} />;
			})
		}
	</section>
</Layout>

<style>
	.episode-previews {
		display: grid;
		justify-content: center;
		margin: 3rem auto 6rem;
		max-width: min(1280px, 90vw);
		width: 100%;
	}

	.subscribe-bar {
		align-items: center;
		display: flex;
		gap: 1rem;
		justify-content: space-between;
	}

	.subscribe-bar h3 {
		color: var(--color-gray-lighter);
		font-size: 0.75rem;
		font-weight: 400;
		letter-spacing: 0.2em;
		margin: 0;
		padding: 0;
		text-transform: uppercase;
	}

	.subscribe-bar a {
		height: 35px;
		width: 35px;
	}

	.subscribe-bar svg {
		height: auto;
		width: auto;
	}

	.subscribe-bar :is(a, svg) {
		display: block;
	}

	.subscribe-bar path {
		fill: var(--color-gray-light);
		transition: 150ms linear all;
	}

	.subscribe-bar svg:is(:focus, :hover, :active) path {
		fill: var(--color-white);
	}

	@media (min-width: 1100px) {
		.episode-previews {
			align-items: start;
			display: grid;
			gap: 3rem;
			grid-template-columns: repeat(auto-fit, min(calc(50% - 1.5rem), 600px));
		}
	}
</style>
